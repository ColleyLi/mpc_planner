cmake_minimum_required(VERSION 3.8)
project(mpc_planner_solver)

add_compile_options(-std=c++17)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic -Wno-unused-parameter)
endif()

set(DEPENDENCIES
  mpc_planner_util
)

find_package(catkin REQUIRED COMPONENTS
  ${DEPENDENCIES}
)

set(acados_path ${PROJECT_SOURCE_DIR}/../../../../../Documents/acados)
set(acados_lib_path ${acados_path}/lib)
set(acados_include_path ${acados_path}/include)

# Print acados_include_path
set(acados_LIBRARIES
  ${PROJECT_SOURCE_DIR}/acados/test/libacados_ocp_solver_Solver.so # Generated files
  ${acados_lib_path}/libacados.so
  ${acados_lib_path}/libblasfeo.so
  ${acados_lib_path}/libhpipm.so
)

set(acados_INCLUDE_DIRS
  acados/test # Generated files
  ${acados_include_path}
  ${acados_include_path}/blasfeo/include
  ${acados_include_path}/hpipm/include
)

set(acados_SOURCES
  src/acados_solver_interface.cpp
)

set(forces_LIBRARIES
  ${PROJECT_SOURCE_DIR}/Solver/lib/libSolver.so
)

set(forces_INCLUDE_DIRS
  ${PROJECT_SOURCE_DIR}/Solver/include
)

set(forces_SOURCES
  src/forces_solver_interface.cpp
  Solver/include/mpc_planner_generated.cpp
  Solver/Solver_interface.c # Generated solver files
  Solver/Solver_model.c
)
catkin_package(
  CATKIN_DEPENDS ${DEPENDENCIES}
  INCLUDE_DIRS
  include
  include/${PROJECT_NAME}
  ${acados_INCLUDE_DIRS}
  ${forces_INCLUDE_DIRS}
  LIBRARIES
  ${PROJECT_NAME}
  ${acados_LIBRARIES}
  ${forces_LIBRARIES}
)

include_directories(
  include
  ${acados_INCLUDE_DIRS}
  ${forces_INCLUDE_DIRS}
  ${catkin_INCLUDE_DIRS}
)

add_definitions(-DACADOS_SOLVER)

add_library(${PROJECT_NAME} SHARED
  Solver/include/mpc_planner_parameters.cpp
  src/state.cpp

  ${acados_SOURCES}

  # ${forces_SOURCES}
)
add_dependencies(${PROJECT_NAME} ${${PROJECT_NAME}_EXPORTED_TARGETS} ${catkin_EXPORTED_TARGETS})
target_link_libraries(${PROJECT_NAME}
  ${catkin_LIBRARIES}
  ${forces_LIBRARIES}
  ${acados_LIBRARIES}
)

add_definitions(-DMPC_PLANNER_ROS)

install(TARGETS ${PROJECT_NAME}
  ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
  RUNTIME DESTINATION ${CATKIN_GLOBAL_BIN_DESTINATION}
)

install(DIRECTORY include/${PROJECT_NAME}/
  DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
  PATTERN ".svn" EXCLUDE
)